import tkinter as tk
from tkinter import ttk

SMALL_FONT = ('Verdana', 8)
LARGE_FONT = ('Verdana', 12)


class show(ttk.Frame):
    def __init__(self,parent,a,b,ab,c,d,cd,e):
        ttk.Frame.__init__(self,parent)
        self.msgLabel = ttk.Label(self, text='Run a scenario by choosing parameters'+
                                  ' for this soil group. You will need to choose parameter'+
                                  's in the range found from the database.', wraplength=900,
                                  foreground='red')
        self.msgLabel.grid(row=0, column=0,columnspan=9, pady=10, padx=10, sticky='w')
        

        self.LblP=ttk.LabelFrame(self)
        self.LblP.grid(row=1, column=0, columnspan=3, padx=10, pady=10)

        self.alphaPhead = tk.Text(self.LblP, width=23, height=1, background='snow2')
        self.alphaPhead.grid(row=0,column=0,columnspan=3,padx=5,pady=5,sticky='w')
        self.alphaPhead.insert(tk.INSERT, u'Olsen P drop rate, \N{GREEK SMALL LETTER ALPHA}p:')
        self.alphaPhead.tag_add('subscriptP','1.20','1.21')
        self.alphaPhead.tag_add('nscriptP','1.0','1.20')
        self.alphaPhead.tag_add('nscriptP1','1.21','1.22')
        self.alphaPhead.tag_configure('subscriptP',offset=-2.3,font=SMALL_FONT)
        self.alphaPhead.tag_configure('nscriptP',font=LARGE_FONT)
        self.alphaPhead.tag_configure('nscriptP1',font=LARGE_FONT)
        self.alphaPhead.configure(state=tk.DISABLED,borderwidth=-3)

        self.canvasAlphaP = tk.Canvas(self.LblP, height=50, width=250, background='alice blue')
        axis=self.canvasAlphaP.create_line(25,30,225,30, width=2)
        box = self.canvasAlphaP.create_line(int(200/(a[4] - a[0]) * (a[1] - a[0])) + 25,45,int(200/(a[4] - a[0]) * (a[3] - a[0])) + 25,45,int(200/(a[4] - a[0]) * (a[3] - a[0])) + 25,15,
                                            int(200/(a[4] - a[0]) * (a[1] - a[0])) + 25,15,int(200/(a[4] - a[0]) * (a[1] - a[0])) + 25,45, fill='blue', width=2)
        medline = self.canvasAlphaP.create_line(int(200/(a[4] - a[0]) * (a[2] - a[0])) + 25, 45, int(200/(a[4] - a[0]) * (a[2] - a[0])) + 25, 15, fill='red', width=2)
        minAlphaPLbl = self.canvasAlphaP.create_text(25, 50, text=str(round(a[0] * 10 ** 4, 3)), font=SMALL_FONT)
        AlphaPQ1Lbl = self.canvasAlphaP.create_text(int(200/(a[4] - a[0]) * (a[1] - a[0])) + 25, 10, text=str(round(a[1] * 10 ** 4, 3)), font=SMALL_FONT)
        medianAlphaLbl = self.canvasAlphaP.create_text(int(200/(a[4] - a[0]) * (a[2] - a[0])) + 30, 37, text=str(round(a[2] * 10 ** 4, 3)), font=SMALL_FONT, fill='red',anchor='w')
        AlphaPQ3Lbl = self.canvasAlphaP.create_text(int(200/(a[4] - a[0]) * (a[3] - a[0])) + 25, 10, text=str(round(a[3] * 10 ** 4, 3)), font=SMALL_FONT)
        maxAlphaPLbl = self.canvasAlphaP.create_text(225, 50, text=str(round(a[4] * 10 ** 4, 3)), font=SMALL_FONT)
        self.canvasAlphaP.grid(row=1,column=0, columnspan=4,padx=5,pady=5)
        self.alphaPVar = tk.StringVar()
        self.ent1 = ttk.Entry(self.LblP, textvariable=self.alphaPVar, width=6)
        self.ent1.grid(row=2, column=1, columnspan=1)
        self.alphaPVar.set(str(round (e[0] * 10 ** 4, 4)))
        self.alphaPunitLbl = tk.Text(self.LblP,width=12,height=1, background='snow2')
        self.alphaPunitLbl.insert(tk.INSERT,'x 10-4 day-1')
        self.alphaPunitLbl.grid(row=2, column=2, columnspan=2)
        self.alphaPunitLbl.tag_add('psuper1','1.4','1.6')
        self.alphaPunitLbl.tag_add('psuper2','1.10','1.12')
        self.alphaPunitLbl.tag_add('pn1','1.0','1.4')
        self.alphaPunitLbl.tag_add('pn2','1.6','1.10')
        self.alphaPunitLbl.tag_configure('psuper1',offset=2.5,font=SMALL_FONT)
        self.alphaPunitLbl.tag_configure('psuper2',offset=2.5,font=SMALL_FONT)
        self.alphaPunitLbl.tag_configure('pn1',font=LARGE_FONT)
        self.alphaPunitLbl.tag_configure('pn2',font=LARGE_FONT)
        self.alphaPunitLbl.configure(state=tk.DISABLED,borderwidth=-3)

        self.LblK=ttk.LabelFrame(self)
        self.LblK.grid(row=1, column=3, columnspan=3, padx=10, pady=10)

        self.alphaKhead = tk.Text(self.LblK, width=19, height=1, background='snow2')
        self.alphaKhead.grid(row=0,column=0,columnspan=3,padx=5,pady=5,sticky='w')
        self.alphaKhead.insert(tk.INSERT, u'QTK drop rate, \N{GREEK SMALL LETTER ALPHA}k:')
        self.alphaKhead.tag_add('subscriptK','1.16','1.17')
        self.alphaKhead.tag_add('nscriptK','1.0','1.16')
        self.alphaKhead.tag_add('nscriptK1','1.17','1.18')
        self.alphaKhead.tag_configure('subscriptK',offset=-2.3,font=SMALL_FONT)
        self.alphaKhead.tag_configure('nscriptK',font=LARGE_FONT)
        self.alphaKhead.tag_configure('nscriptK1',font=LARGE_FONT)
        self.alphaKhead.configure(state=tk.DISABLED,borderwidth=-3)

        self.canvasAlphaK = tk.Canvas(self.LblK, height=50, width=250, background='alice blue')
        axis=self.canvasAlphaK.create_line(25,30,225,30, width=2)
        box = self.canvasAlphaK.create_line(int(200/(b[4] - b[0]) * (b[1] - b[0])) + 25,45,int(200/(b[4] - b[0]) * (b[3] - b[0])) + 25,45,int(200/(b[4] - b[0]) * (b[3] - b[0])) + 25,15,
                                            int(200/(b[4] - b[0]) * (b[1] - b[0])) + 25,15,int(200/(b[4] - b[0]) * (b[1] - b[0])) + 25,45, fill='blue', width=2)
        medline = self.canvasAlphaK.create_line(int(200/(b[4] - b[0]) * (b[2] - b[0])) + 25, 45, int(200/(b[4] - b[0]) * (b[2] - b[0])) + 25, 15, fill='red', width=2)
        minAlphaKLbl = self.canvasAlphaK.create_text(25, 50, text=str(round(b[0] * 10 ** 4, 3)), font=SMALL_FONT)
        AlphaKQ1Lbl = self.canvasAlphaK.create_text(int(200/(b[4] - b[0]) * (b[1] - b[0])) + 25, 10, text=str(round(b[1] * 10 ** 4, 3)), font=SMALL_FONT)
        medianAlphaKLbl = self.canvasAlphaK.create_text(int(200/(b[4] - b[0]) * (b[2] - b[0])) + 30, 37, text=str(round(b[2] * 10 ** 4, 3)), font=SMALL_FONT, fill='red',anchor='w')
        AlphaKQ3Lbl = self.canvasAlphaK.create_text(int(200/(b[4] - b[0]) * (b[3] - b[0])) + 25, 10, text=str(round(b[3] * 10 ** 4, 3)), font=SMALL_FONT)
        maxAlphaKLbl = self.canvasAlphaK.create_text(225, 50, text=str(round(b[4] * 10 ** 4, 3)), font=SMALL_FONT)
        self.canvasAlphaK.grid(row=1,column=0, columnspan=4,padx=5,pady=5)
        self.alphaKVar = tk.StringVar()
        self.ent2 = ttk.Entry(self.LblK, textvariable=self.alphaKVar, width=6)
        self.ent2.grid(row=2, column=1, columnspan=1)
        self.alphaKVar.set(str(round (e[1] * 10 ** 4, 4)))
        self.alphaKunitLbl = tk.Text(self.LblK,width=12,height=1, background='snow2')
        self.alphaKunitLbl.insert(tk.INSERT,'x 10-4 day-1')
        self.alphaKunitLbl.grid(row=2, column=2, columnspan=2)
        self.alphaKunitLbl.tag_add('ksuper1','1.4','1.6')
        self.alphaKunitLbl.tag_add('ksuper2','1.10','1.12')
        self.alphaKunitLbl.tag_add('kn1','1.0','1.4')
        self.alphaKunitLbl.tag_add('kn2','1.6','1.10')
        self.alphaKunitLbl.tag_configure('ksuper1',offset=2.5,font=SMALL_FONT)
        self.alphaKunitLbl.tag_configure('ksuper2',offset=2.5,font=SMALL_FONT)
        self.alphaKunitLbl.tag_configure('kn1',font=LARGE_FONT)
        self.alphaKunitLbl.tag_configure('kn2',font=LARGE_FONT)
        self.alphaKunitLbl.configure(state=tk.DISABLED,borderwidth=-3)

        self.LblS=ttk.LabelFrame(self)
        self.LblS.grid(row=1, column=6, columnspan=3, padx=10, pady=10)

        self.alphaShead = tk.Text(self.LblS, width=19, height=1, background='snow2')
        self.alphaShead.grid(row=0,column=0,columnspan=3,padx=5,pady=5,sticky='w')
        self.alphaShead.insert(tk.INSERT, u'EOS drop rate, \N{GREEK SMALL LETTER ALPHA}s:')
        self.alphaShead.tag_add('subscriptS','1.16','1.17')
        self.alphaShead.tag_add('nscriptS','1.0','1.16')
        self.alphaShead.tag_add('nscriptS1','1.17','1.18')
        self.alphaShead.tag_configure('subscriptS',offset=-2.3,font=SMALL_FONT)
        self.alphaShead.tag_configure('nscriptS',font=LARGE_FONT)
        self.alphaShead.tag_configure('nscriptS1',font=LARGE_FONT)
        self.alphaShead.configure(state=tk.DISABLED,borderwidth=-3)

        self.canvasAlphaS = tk.Canvas(self.LblS, height=50, width=250, background='alice blue')
        axis=self.canvasAlphaS.create_line(25,30,225,30, width=2)
        box = self.canvasAlphaS.create_line(int(200/(ab[4] - ab[0]) * (ab[1] - ab[0])) + 25,45,int(200/(ab[4] - ab[0]) * (ab[3] - ab[0])) + 25,45,int(200/(ab[4] - ab[0]) * (ab[3] - ab[0])) + 25,15,
                                            int(200/(ab[4] - ab[0]) * (ab[1] - ab[0])) + 25,15,int(200/(ab[4] - ab[0]) * (ab[1] - ab[0])) + 25,45, fill='blue', width=2)
        medline = self.canvasAlphaS.create_line(int(200/(ab[4] - ab[0]) * (ab[2] - ab[0])) + 25, 45, int(200/(ab[4] - ab[0]) * (ab[2] - ab[0])) + 25, 15, fill='red', width=2)
        minAlphaSLbl = self.canvasAlphaS.create_text(25, 50, text=str(round(ab[0] * 10 ** 4, 3)), font=SMALL_FONT)
        AlphaSQ1Lbl = self.canvasAlphaS.create_text(int(200/(ab[4] - ab[0]) * (ab[1] - ab[0])) + 25, 10, text=str(round(ab[1] * 10 ** 4, 3)), font=SMALL_FONT)
        medianAlphaLbl = self.canvasAlphaS.create_text(int(200/(ab[4] - ab[0]) * (ab[2] - ab[0])) + 30, 37, text=str(round(ab[2] * 10 ** 4, 3)), font=SMALL_FONT, fill='red',anchor='w')
        AlphaSQ3Lbl = self.canvasAlphaS.create_text(int(200/(ab[4] - ab[0]) * (ab[3] - ab[0])) + 25, 10, text=str(round(ab[3] * 10 ** 4, 3)), font=SMALL_FONT)
        maxAlphaSLbl = self.canvasAlphaS.create_text(225, 50, text=str(round(ab[4] * 10 ** 4, 3)), font=SMALL_FONT)
        self.canvasAlphaS.grid(row=1,column=0, columnspan=4,padx=5,pady=5)
        self.alphaSVar = tk.StringVar()
        self.ent12 = ttk.Entry(self.LblS, textvariable=self.alphaSVar, width=6)
        self.ent12.grid(row=2, column=1, columnspan=1)
        self.alphaSVar.set(str(round (e[2] * 10 ** 4, 4)))
        self.alphaSunitLbl = tk.Text(self.LblS,width=12,height=1, background='snow2')
        self.alphaSunitLbl.insert(tk.INSERT,'x 10-4 day-1')
        self.alphaSunitLbl.grid(row=2, column=2, columnspan=2)
        self.alphaSunitLbl.tag_add('ssuper1','1.4','1.6')
        self.alphaSunitLbl.tag_add('ssuper2','1.10','1.12')
        self.alphaSunitLbl.tag_add('sn1','1.0','1.4')
        self.alphaSunitLbl.tag_add('sn2','1.6','1.10')
        self.alphaSunitLbl.tag_configure('ssuper1',offset=2.5,font=SMALL_FONT)
        self.alphaSunitLbl.tag_configure('ssuper2',offset=2.5,font=SMALL_FONT)
        self.alphaSunitLbl.tag_configure('sn1',font=LARGE_FONT)
        self.alphaSunitLbl.tag_configure('sn2',font=LARGE_FONT)
        self.alphaSunitLbl.configure(state=tk.DISABLED,borderwidth=-3)


        self.LblcP=ttk.LabelFrame(self)
        self.LblcP.grid(row=2, column=0, columnspan=3,padx=10,pady=10)

        self.cPhead = tk.Text(self.LblcP, width=35, height=1, background='snow2')
        self.cPhead.grid(row=0,column=0,columnspan=3,padx=5,pady=5,sticky='w')
        self.cPhead.insert(tk.INSERT, 'P fertiliser to Olsen P factor, cp:')
        self.cPhead.tag_add('subscriptcP','1.33','1.34')
        self.cPhead.tag_add('nscriptcP','1.0','1.33')
        self.cPhead.tag_add('nscriptcP1','1.34','1.35')
        self.cPhead.tag_configure('subscriptcP',offset=-2.3,font=SMALL_FONT)
        self.cPhead.tag_configure('nscriptcP',font=LARGE_FONT)
        self.cPhead.tag_configure('nscriptcP1',font=LARGE_FONT)
        self.cPhead.configure(state=tk.DISABLED,borderwidth=-3)

        self.canvascP = tk.Canvas(self.LblcP, height=50, width=250, background='alice blue')
        axis=self.canvascP.create_line(25,30,225,30, width=2)
        box = self.canvascP.create_line(int(200/(c[4] - c[0]) * (c[1] - c[0])) + 25,45,int(200/(c[4] - c[0]) * (c[3] - c[0])) + 25,45,int(200/(c[4] - c[0]) * (c[3] - c[0])) + 25,15,
                                            int(200/(c[4] - c[0]) * (c[1] - c[0])) + 25,15,int(200/(c[4] - c[0]) * (c[1] - c[0])) + 25,45, fill='blue', width=2)
        medline = self.canvascP.create_line(int(200/(c[4] - c[0]) * (c[2] - c[0])) + 25, 45, int(200/(c[4] - c[0]) * (c[2] - c[0])) + 25, 15, fill='red', width=2)
        mincPLbl = self.canvascP.create_text(25, 50, text=str(round(c[0], 3)), font=SMALL_FONT)
        cPQ1Lbl = self.canvascP.create_text(int(200/(c[4] - c[0]) * (c[1] - c[0])) + 25, 10, text=str(round(c[1], 3)), font=SMALL_FONT)
        mediancLbl = self.canvascP.create_text(int(200/(c[4] - c[0]) * (c[2] - c[0])) + 30, 37, text=str(round(c[2], 3)), font=SMALL_FONT, fill='red',anchor='w')
        cPQ3Lbl = self.canvascP.create_text(int(200/(c[4] - c[0]) * (c[3] - c[0])) + 25, 10, text=str(round(c[3], 3)), font=SMALL_FONT)
        maxcPLbl = self.canvascP.create_text(225, 50, text=str(round(c[4], 3)), font=SMALL_FONT)
        self.canvascP.grid(row=1,column=0, columnspan=4,padx=5,pady=5)
        self.cPVar = tk.StringVar()
        self.ent3 = ttk.Entry(self.LblcP, textvariable=self.cPVar, width=6)
        self.ent3.grid(row=2, column=1, columnspan=1)
        self.cPVar.set(str(round (e[3], 4)))
        self.cPunitLbl = tk.Text(self.LblcP,width=20,height=1, background='snow2')
        self.cPunitLbl.insert(tk.INSERT,'Olsen P (kg P ha-1)-1')
        self.cPunitLbl.grid(row=2, column=2, columnspan=2,padx=5)
        self.cPunitLbl.tag_add('pcsuper1','1.16','1.18')
        self.cPunitLbl.tag_add('pcsuper2','1.19','1.21')
        self.cPunitLbl.tag_add('pnn1','1.0','1.16')
        self.cPunitLbl.tag_add('pnn2','1.18','1.19')
        self.cPunitLbl.tag_configure('pcsuper1',offset=2.5,font=SMALL_FONT)
        self.cPunitLbl.tag_configure('pcsuper2',offset=2.5,font=SMALL_FONT)
        self.cPunitLbl.tag_configure('pnn1',font=LARGE_FONT)
        self.cPunitLbl.tag_configure('pnn2',font=LARGE_FONT)
        self.cPunitLbl.configure(state=tk.DISABLED,borderwidth=-3)




        self.LblcK=ttk.LabelFrame(self)
        self.LblcK.grid(row=2, column=3, columnspan=3, padx=10,pady=10)

        self.cKhead = tk.Text(self.LblcK, width=31, height=1, background='snow2')
        self.cKhead.grid(row=0,column=0,columnspan=3,padx=5,pady=5,sticky='w')
        self.cKhead.insert(tk.INSERT, 'K fertiliser to QTK factor, ck:')
        self.cKhead.tag_add('subscriptcK','1.29','1.30')
        self.cKhead.tag_add('nscriptcK','1.0','1.29')
        self.cKhead.tag_add('nscriptcK1','1.30','1.31')
        self.cKhead.tag_configure('subscriptcK',offset=-2.3,font=SMALL_FONT)
        self.cKhead.tag_configure('nscriptcK',font=LARGE_FONT)
        self.cKhead.tag_configure('nscriptcK1',font=LARGE_FONT)
        self.cKhead.configure(state=tk.DISABLED,borderwidth=-3)

        self.canvascK = tk.Canvas(self.LblcK, height=50, width=250, background='alice blue')
        axis=self.canvascK.create_line(25,30,225,30, width=2)
        box = self.canvascK.create_line(int(200/(d[4] - d[0]) * (d[1] - d[0])) + 25,45,int(200/(d[4] - d[0]) * (d[3] - d[0])) + 25,45,int(200/(d[4] - d[0]) * (d[3] - d[0])) + 25,15,
                                            int(200/(d[4] - d[0]) * (d[1] - d[0])) + 25,15,int(200/(d[4] - d[0]) * (d[1] - d[0])) + 25,45, fill='blue', width=2)
        medline = self.canvascK.create_line(int(200/(d[4] - d[0]) * (d[2] - d[0])) + 25, 45, int(200/(d[4] - d[0]) * (d[2] - d[0])) + 25, 15, fill='red', width=2)
        mincKLbl = self.canvascK.create_text(25, 50, text=str(round(d[0], 3)), font=SMALL_FONT)
        cKQ1Lbl = self.canvascK.create_text(int(200/(d[4] - d[0]) * (d[1] - d[0])) + 25, 10, text=str(round(d[1], 3)), font=SMALL_FONT)
        mediancLbl = self.canvascK.create_text(int(200/(d[4] - d[0]) * (d[2] - d[0])) + 30, 37, text=str(round(d[2], 3)), font=SMALL_FONT, fill='red',anchor='w')
        cKQ3Lbl = self.canvascK.create_text(int(200/(d[4] - d[0]) * (d[3] - d[0])) + 25, 10, text=str(round(d[3], 3)), font=SMALL_FONT)
        maxcKLbl = self.canvascK.create_text(225, 50, text=str(round(d[4], 3)), font=SMALL_FONT)
        self.canvascK.grid(row=1,column=0, columnspan=4,padx=5,pady=5)
        self.cKVar = tk.StringVar()
        self.ent4 = ttk.Entry(self.LblcK, textvariable=self.cKVar, width=6)
        self.ent4.grid(row=2, column=1, columnspan=1)
        self.cKVar.set(str(round (e[4], 4)))
        self.cKunitLbl = tk.Text(self.LblcK,width=16,height=1, background='snow2')
        self.cKunitLbl.insert(tk.INSERT,'QTK (kg K ha-1)-1')
        self.cKunitLbl.grid(row=2, column=2, columnspan=2,padx=5)
        self.cKunitLbl.tag_add('kcsuper1','1.12','1.14')
        self.cKunitLbl.tag_add('kcsuper2','1.15','1.17')
        self.cKunitLbl.tag_add('knn1','1.0','1.12')
        self.cKunitLbl.tag_add('knn2','1.14','1.15')
        self.cKunitLbl.tag_configure('kcsuper1',offset=2.5,font=SMALL_FONT)
        self.cKunitLbl.tag_configure('kcsuper2',offset=2.5,font=SMALL_FONT)
        self.cKunitLbl.tag_configure('knn1',font=LARGE_FONT)
        self.cKunitLbl.tag_configure('knn2',font=LARGE_FONT)
        self.cKunitLbl.configure(state=tk.DISABLED,borderwidth=-3)

        self.LblcS=ttk.LabelFrame(self)
        self.LblcS.grid(row=2, column=6, columnspan=3,padx=10,pady=10)

        self.cShead = tk.Text(self.LblcS, width=31, height=1, background='snow2')
        self.cShead.grid(row=0,column=0,columnspan=3,padx=5,pady=5,sticky='w')
        self.cShead.insert(tk.INSERT, 'S fertiliser to EOS factor, cs:')
        self.cShead.tag_add('subscriptcS','1.29','1.30')
        self.cShead.tag_add('nscriptcS','1.0','1.29')
        self.cShead.tag_add('nscriptcS1','1.30','1.31')
        self.cShead.tag_configure('subscriptcS',offset=-2.3,font=SMALL_FONT)
        self.cShead.tag_configure('nscriptcS',font=LARGE_FONT)
        self.cShead.tag_configure('nscriptcS1',font=LARGE_FONT)
        self.cShead.configure(state=tk.DISABLED,borderwidth=-3)

        self.canvascS = tk.Canvas(self.LblcS, height=50, width=250, background='alice blue')
        axis=self.canvascS.create_line(25,30,225,30, width=2)
        box = self.canvascS.create_line(int(200/(cd[4] - cd[0]) * (cd[1] - cd[0])) + 25,45,int(200/(cd[4] - cd[0]) * (cd[3] - cd[0])) + 25,45,int(200/(cd[4] - cd[0]) * (cd[3] - cd[0])) + 25,15,
                                            int(200/(cd[4] - cd[0]) * (cd[1] - cd[0])) + 25,15,int(200/(cd[4] - cd[0]) * (cd[1] - cd[0])) + 25,45, fill='blue', width=2)
        medline = self.canvascS.create_line(int(200/(cd[4] - cd[0]) * (cd[2] - cd[0])) + 25, 45, int(200/(cd[4] - cd[0]) * (cd[2] - cd[0])) + 25, 15, fill='red', width=2)
        mincSLbl = self.canvascS.create_text(25, 50, text=str(round(cd[0], 3)), font=SMALL_FONT)
        cSQ1Lbl = self.canvascS.create_text(int(200/(cd[4] - cd[0]) * (cd[1] - cd[0])) + 25, 10, text=str(round(cd[1], 3)), font=SMALL_FONT)
        mediancLbl = self.canvascS.create_text(int(200/(cd[4] - cd[0]) * (cd[2] - cd[0])) + 30, 37, text=str(round(cd[2], 3)), font=SMALL_FONT, fill='red',anchor='w')
        cSQ3Lbl = self.canvascS.create_text(int(200/(cd[4] - cd[0]) * (cd[3] - cd[0])) + 25, 10, text=str(round(cd[3], 3)), font=SMALL_FONT)
        maxcSLbl = self.canvascS.create_text(225, 50, text=str(round(cd[4], 3)), font=SMALL_FONT)
        self.canvascS.grid(row=1,column=0, columnspan=4,padx=5,pady=5)
        self.cSVar = tk.StringVar()
        self.ent34 = tk.ttk.Entry(self.LblcS, textvariable=self.cSVar, width=6)
        self.ent34.grid(row=2, column=1, columnspan=1)
        self.cSVar.set(str(round (e[5], 4)))
        self.cSunitLbl = tk.Text(self.LblcS,width=16,height=1, background='snow2')
        self.cSunitLbl.insert(tk.INSERT,'EOS (kg S ha-1)-1')
        self.cSunitLbl.grid(row=2, column=2, columnspan=2,padx=5)
        self.cSunitLbl.tag_add('scsuper1','1.12','1.14')
        self.cSunitLbl.tag_add('scsuper2','1.15','1.17')
        self.cSunitLbl.tag_add('snn1','1.0','1.12')
        self.cSunitLbl.tag_add('snn2','1.14','1.15')
        self.cSunitLbl.tag_configure('scsuper1',offset=2.5,font=SMALL_FONT)
        self.cSunitLbl.tag_configure('scsuper2',offset=2.5,font=SMALL_FONT)
        self.cSunitLbl.tag_configure('snn1',font=LARGE_FONT)
        self.cSunitLbl.tag_configure('snn2',font=LARGE_FONT)
        self.cSunitLbl.configure(state=tk.DISABLED,borderwidth=-3)

        
        
    def paR(self):
        alphaP = float(self.alphaPVar.get()) * 10 ** (-4)
        alphaK = float(self.alphaKVar.get()) * 10 ** (-4)
        alphaS = float(self.alphaSVar.get()) * 10 ** (-4)
        cP = float(self.cPVar.get())
        cK = float(self.cKVar.get())
        cS = float(self.cSVar.get())
        return alphaP,alphaK,alphaS,cP,cK,cS
